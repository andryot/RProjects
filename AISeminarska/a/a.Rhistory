load("C:/Users/Aleksandar/Desktop/2. letnik/ui/seminarska/.RData")
summary(podatki)
summary(podatki)
podatki$vikend <- as.factor(podatki$vikend)
summary(podatki)
podatki$poletne_pocitnice <- as.factor(poletne_pocitnice)
podatki$poletne_pocitnice <- as.factor(podatki$poletne_pocitnice)
summary(podatki)
podatki$ura <- as.factor(podatki$ura)
summary(podatki)
set.seed(0)
sel <- sample(1:nrow(data), as.integer(nrow(podatki) * 0.7), replace=F)
train <- data[sel,]
sel <- sample(1:nrow(podatki), as.integer(nrow(podatki) * 0.7), replace=F)
set.seed(0)
sel <- sample(1:nrow(podatki), as.integer(nrow(podatki) * 0.7), replace=F)
train <- podatki[sel,]
test <- podatki[-sel,]
library(rpart)
library(rpart.plot)
dt <- rpart(norm_poraba ~ .-poraba, train)
rpart.plot(dt)
observed <- test$insurance
predicted <- predict(dt, test, type="class")
q <- observed == predicted
sum(q)/length(q)
q
observed <- test$norm_poraba
predicted <- predict(dt, test, type="class")
q <- observed == predicted
sum(q)/length(q)
source("wrapper.R")
source("wrapper.r")
source("wrapper.r")
setwd("C:/Users/Aleksandar/Desktop/2. letnik/ui/seminarska")
source("wrapper.r")
source("wrapper.r")
myTrainFunc <- function(formula, traindata)
{
rpart(formula, traindata)
}
myPredictFunc <- function(model, testdata)
{
predict(model, testdata, type="class")
}
myEvalFunc <- function(predicted, observed, trained)
{
# vracamo napako modela, saj wrapper minimizira vrednost ocene
1.0 - mean(observed == predicted)
}
wrapper( norm_poraba ~ .-poraba, train, myTrainFunc, myPredictFunc, myEvalFunc, cvfolds=10)
wrapper( norm_poraba ~ ., train, myTrainFunc, myPredictFunc, myEvalFunc, cvfolds=10)
summary(podatki)
train <- podatki[sel,-15]
test <- podatki[-sel,-15]
summary(train)
wrapper( norm_poraba ~ .-poraba, train, myTrainFunc, myPredictFunc, myEvalFunc, cvfolds=10)
wrapper( norm_poraba ~ .-poraba, train, myTrainFunc, myPredictFunc, myEvalFunc, cvfolds=10)
wrapper( norm_poraba ~ ., train, myTrainFunc, myPredictFunc, myEvalFunc, cvfolds=10)
View(train)
dt <- rpart(norm_poraba ~ poraba_presnji_dan, train)
rpart.plot(dt)
observed <- test$norm_poraba
predicted <- predict(dt, test, type="class")
q <- observed == predicted
sum(q)/length(q)
dt <- rpart(norm_poraba ~ .-poraba, train)
rpart.plot(dt)
observed <- test$norm_poraba
predicted <- predict(dt, test, type="class")
q <- observed == predicted
sum(q)/length(q)
dt <- rpart(norm_poraba ~ .-poraba, train)
rpart.plot(dt)
observed <- test$norm_poraba
predicted <- predict(dt, test, type="class")
q <- observed == predicted
sum(q)/length(q)
dt <- rpart(norm_poraba ~ poraba_presnji_dan, train)
rpart.plot(dt)
observed <- test$norm_poraba
predicted <- predict(dt, test, type="class")
q <- observed == predicted
sum(q)/length(q)
dt <- rpart(norm_poraba ~ .-poraba, train)
dt <- rpart(norm_poraba ~ ., train)
rpart.plot(dt)
observed <- test$norm_poraba
predicted <- predict(dt, test, type="class")
q <- observed == predicted
sum(q)/length(q)
dt <- rpart(norm_poraba ~ poraba_presnji_dan, train)
rpart.plot(dt)
observed <- test$norm_poraba
predicted <- predict(dt, test, type="class")
q <- observed == predicted
sum(q)/length(q)
dt <- rpart(norm_poraba ~ .-poraba, train)
dt <- rpart(norm_poraba ~ poraba_presnji_dan + povrsina + datum + ura + regija + stavba + namembnost + leto_izgradnje + temp_zraka + temp_rosisca + oblacnost + padavine + pritisk + smer_vetra + hitrost_vetra + vikend + letni_cas + del_dneva + poletne_pocitnice, train)
rpart.plot(dt)
observed <- test$norm_poraba
predicted <- predict(dt, test, type="class")
q <- observed == predicted
sum(q)/length(q)
